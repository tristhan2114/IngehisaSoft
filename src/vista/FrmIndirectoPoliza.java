/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.event.KeyEvent;
import javax.swing.table.TableColumnModel;
import util.validaciones;

/**
 *
 * @author personal1
 */
public class FrmIndirectoPoliza extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmIndirectoPoliza
     */
    validaciones vali = new validaciones();
    // variable para caracter
    private Character kpress;

    public FrmIndirectoPoliza() {
        initComponents();

        setTitle("Costo de Poliza / Costo Indirecto");
        setEsquemaTable();
        table.setTableHeader(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("COSTO DE POLIZA");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, -1));

        table.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"<html><center><b>Monto de contrato</b></center></html>", null, "0.0", "0.0", "0", null, null, null, null, null},
                {null, null, null, "0.0", null, null, null, null, null, null},
                {"<html> <center> <b style=\"font-size:9;\"> GARANTIA DE BUEN USO <br>DEL ANTICIPO POR EL 20% </b></center></html>", null, null, null, null, "0.0", null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0"},
                {null, null, "0", null, null, null, null, null, null, "0.0"},
                {null, null, null, null, null, null, null, null, null, null},
                {"<html><center><b style=\"font-size:9;\">POLIZA POR 5% POR <br>GARANTIA DE FIEL CUMPLIMIENTO</b></center></html>", null, null, null, null, "0.0", null, null, null, null},
                {"", null, null, null, null, null, null, null, null, null},
                {"0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0", "0.0"},
                {null, null, null, null, null, null, null, null, null, "0.0"}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table.setRowHeight(25);
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(170);
            table.getColumnModel().getColumn(0).setMaxWidth(170);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, 726, 300));

        jButton1.setText("x");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 6, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 340));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        FrmIndirectos.activoFrmIndirectoPoliza = false;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyPressed
        kpress = evt.getKeyChar();
        if (kpress == KeyEvent.VK_ENTER) {
            calGarantia();
        }
    }//GEN-LAST:event_tableKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmIndirectoPoliza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmIndirectoPoliza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmIndirectoPoliza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmIndirectoPoliza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmIndirectoPoliza().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    // no move columnTable y dimension fija 
    private void setEsquemaTable() {
        table.getTableHeader().setReorderingAllowed(false);
    }

    // calculo de garantia 
    private void calGarantia() {
        String txt = table.getValueAt(0, 3).toString();
        if (!(txt.equals("") || txt.equals("0") || txt.equals("0.0"))) {
            //   position | columna      | position   | column      | position  |column :: no puede ser cero
            //(    [1]       [3]     *       [0]         [2]    )  /    [0]        [3]
            double campo1 = vali.solomoney(table.getValueAt(1, 3).toString());
            double campo2 = vali.solomoney(table.getValueAt(0, 2).toString());
            double campo3 = vali.solomoney(table.getValueAt(0, 3).toString());
            //     [2]        [5]
            double tot = (campo1 * campo2) / campo3;
            tot = (double) Math.round(tot * 100d) / 100d;
            table.setValueAt(String.valueOf(tot), 2, 5);
            // poner valor default [4]    [0]
            table.setValueAt(String.valueOf(tot), 4, 0);
        }
        // calculo de garantia segun anticipo
        // ( [4] [0] * [4] [1] * [4] [2] ) / [4] [3]  == [4] [4]
        txt = table.getValueAt(4, 3).toString();
        if (!(txt.equals("") || txt.equals("0") || txt.equals("0.0"))) {
            double campo1 = vali.solomoney(table.getValueAt(4, 0).toString());
            double campo2 = vali.solomoney(table.getValueAt(4, 1).toString());
            double campo3 = vali.solomoney(table.getValueAt(4, 2).toString());
            double campo4 = vali.solomoney(table.getValueAt(4, 3).toString());
            //     [2]        [5]
            double tot = (campo1 * campo2 * campo3) / campo4;
            tot = (double) Math.round(tot * 100d) / 100d;
            table.setValueAt(String.valueOf(tot), 4, 4);
        }
        // calculo de resultado anterior * 0.035
        final double num = 0.035;
        double val = vali.solomoney(table.getValueAt(4, 4).toString());
        double valR = val * num;
        valR = (double) Math.round(valR * 100d) / 100d;
        table.setValueAt(String.valueOf(valR), 4, 5);
        // calculo suma de resultado [4][4] + [4][5] +[4][6] = [4][7]
        double val1 = vali.solomoney(table.getValueAt(4, 4).toString());
        double val2 = vali.solomoney(table.getValueAt(4, 5).toString());
        double val3 = vali.solomoney(table.getValueAt(4, 6).toString());
        double vaR = val1 + val2 + val3;
        vaR = (double) Math.round(vaR * 100d) / 100d;
        table.setValueAt(String.valueOf(vaR), 4, 7);
        // calculo [4][7] * 0.12  == [4][8]  ::
        final double num2 = 0.12;
        double var1 = vali.solomoney(table.getValueAt(4, 7).toString());
        double tot1 = var1 * num2;
        tot1 = (double) Math.round(tot1 * 100d) / 100d;
        table.setValueAt(String.valueOf(tot1), 4, 8);
        // suma de [4][7] + [4][8] == [4][9]  [5][9]
        double sum1 = vali.solomoney(table.getValueAt(4, 7).toString());
        double sum2 = vali.solomoney(table.getValueAt(4, 8).toString());
        tot1 = sum1 + sum2;
        tot1 = (double) Math.round(tot1 * 100d) / 100d;
        table.setValueAt(String.valueOf(tot1), 4, 9);
        table.setValueAt(String.valueOf(tot1), 5, 9);

        // calculo de garant cumplimient [0][2] * [9][1]  == [9][0] and [7][5]
        var1 = vali.solomoney(table.getValueAt(0, 2).toString());
        double var2 = vali.solomoney(table.getValueAt(9, 1).toString());
        tot1 = var1 * var2;
        tot1 = (double) Math.round(tot1 * 100d) / 100d;
        table.setValueAt(String.valueOf(tot1), 9, 0);
        table.setValueAt(String.valueOf(tot1), 7, 5);
        // calculo de cumpli garant     !=0
        txt = table.getValueAt(9, 3).toString();
        if (!(txt.equals("") || txt.equals("0") || txt.equals("0.0"))) {
            //( [9][0] * [9][1] * [9][2] )/[9][3]  == [9][4]
            double campo1 = vali.solomoney(table.getValueAt(9, 0).toString());
            double campo2 = vali.solomoney(table.getValueAt(9, 1).toString());
            double campo3 = vali.solomoney(table.getValueAt(9, 2).toString());
            double campo4 = vali.solomoney(table.getValueAt(9, 3).toString());
            double tot = (campo1 * campo2 * campo3) / campo4;
            tot = (double) Math.round(tot * 100d) / 100d;
            table.setValueAt(String.valueOf(tot), 9, 4);
        }
        // en amarillo me quede
        
        
        
        // rename value
        setNameValueTable();
    }

    private void setNameValueTable() {
        // cuando cambia el porcentaje de anticipo
        //  [4][1]
        double n1 = vali.solomoney(table.getValueAt(4, 1).toString());
        n1 = n1 * 100;
        String name1 = "<html><center><b style='font-size:9'>GARANTIA DE BUEN USO <br>DEL ANTICIPO POR EL " + n1 + "%</b></center></html>";
        table.setValueAt(name1, 2, 0);

        // garantia del cumplimiento
        double n2 = vali.solomoney(table.getValueAt(9, 1).toString());
        n2 = n2 * 100;
        String name2 = "<html><center><b style='font-size:9'>POLIZA POR " + n2 + "% POR GARANTIA<br> DE FIEL CUMPLIMIENTO</b></center></html>";
        table.setValueAt(name2, 7, 0);
    }

}
